package core.model

import core.model.Role.*

enum class ClassSpec(val classId: Int, val specIndex: Int, val role: Role) {
    WARRIOR_ARMS(1, 1, DPS), WARRIOR_FURY(1, 2, DPS), WARRIOR_PROTECTION(1, 3, TANK),
    PALADIN_HOLY(2, 1, HEAL), PALADIN_PROTECTION(2, 2, TANK), PALADIN_RETRIBUTION(2, 3, DPS),
    HUNTER_BEASTMASTERY(3, 1, DPS), HUNTER_MARKSMANSHIP(3, 2, DPS), HUNTER_SURVIVAL(3, 3, DPS),
    ROGUE_ASSASSINATION(4, 1, DPS), ROGUE_OUTLAW(4, 2, DPS), ROGUE_SUBTLETY(4, 3, DPS),
    PRIEST_DISCIPLINE(5, 1, HEAL), PRIEST_HOLY(5, 2, HEAL), PRIEST_SHADOW(5, 3, DPS),
    DEATHKNIGHT_BLOOD(6, 1, TANK), DEATHKNIGHT_FROST(6, 2, DPS), DEATHKNIGHT_UNHOLY(6, 3, DPS),
    SHAMAN_ELEMENTAL(7, 1, DPS), SHAMAN_ENHANCEMENT(7, 2, DPS), SHAMAN_RESTORATION(7, 3, HEAL),
    MAGE_ARCANE(8, 1, DPS), MAGE_FIRE(8, 2, DPS), MAGE_FROST(8, 3, DPS),
    WARLOCK_AFFLICTION(9, 1, DPS), WARLOCK_DEMONOLOGY(9, 2, DPS), WARLOCK_DESTRUCTION(9, 3, DPS),
    MONK_BREWMASTER(10, 1, TANK), MONK_MISTWEAVER(10, 2, HEAL), MONK_WINDWALKER(10, 3, DPS),
    DRUID_BALANCE(11, 1, DPS), DRUID_FERAL(11, 2, DPS), DRUID_GUARDIAN(11, 3, TANK), DRUID_RESTORATION(11, 4, HEAL),
    DEMONHUNTER_HAVOC(12, 1, DPS), DEMONHUNTER_VENGEANCE(12, 2, TANK),
    EVOKER_DEVASTATION(13, 1, DPS), EVOKER_PRESERVATION(13, 2, HEAL), EVOKER_AUGMENTATION(13, 3, DPS),
    CUSTOM_ICON(0, 0, TANK);

    companion object {
        fun fromIcon(iconName: String): ClassSpec {
            val parts = iconName.split("-")
            return ClassSpec.valueOf("${parts[0].uppercase()}_${parts[1].uppercase()}")
        }
    }
}
